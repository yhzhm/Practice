/*
题目描述
将1，2，…，9共9个数分成三组，分别组成三个三位数，
且使这三个三位数构成1：2：3的比例，试求出所有满足条件的三个三位数。
输入格式：
木有输入
输出格式：
若干行，每行3个数字。按照每行第一个数字升序排列。
输出样例#1：
192 384 576
...

思路：用子函数拆解i，2*i，3*i，检查拆到的数字是否重复？
重复的话终止子程序，直接返回false；
如果全都拆解完毕，还没有因为重复返回退出，就返回true 
*/

#include <cstdio>
bool n[10];//全局数组，用以记录拆到的数字是否出现过 
bool check(int x)
{
	n[0]=1;
	for(int i=1;i<10;i++) n[i]=false;//初始化数组 
	for(int i=1;i<=3;i++){
		int num=x*i;//循环3次，分别判断主程序中的i，2*i，3*i，这里是x，2*x，3*x 
		while(num!=0){
			int s=num%10;
			if(!n[s]) n[s]=true;//如果拆到的数字以前没有出现过，标记为true，表示现在出现了1次 
			else return false;//如果拆到的数字以前出现过，则表示该数不符合条件，直接返回false退出子程序 
			num/=10;//如果没有执行上面的退出，也就是刚才拆到数字，之前没有出现过，则除以10以后继续判断 
		}
	}
	return true;//如果循环结束，所有9个数字全都拆解完毕，没有因为有重复数字退出，说明这个数符合条件，则返回true 
}
int main()
{
	int i;
	for(i=123;i<=333;i++)
	{
		if (check(i)) printf("%d %d %d\n",i,i*2,i*3);
	}
	return 0;
}
