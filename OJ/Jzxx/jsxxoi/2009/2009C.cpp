/*1765: 【基础】回文数
时间限制 : 1 Sec内存限制 : 64 Mb提交 : 942解决 : 351
题目描述
回文数的定义为：如果把一个数的各个数位上的数字颠倒过来得到的新数与原数相等，则此数是回文数，例：７,２２,１３１,２１１２,３１０１３,…都是回文数。 对任意给出的一个整数n,经过一系列的处理，最后都能成为回文数。处理的方法是，该数加上它的颠倒数，
例如：n=176
第一次处理后　　　　１７６+６７１＝８４７
第二次处理后　　　　８４７+７４８＝１５９５
第三次处理后　　　　１５９５+５９５１＝７５４６
第四次处理后　　　　７５４６+６４５７＝１４００３
第五次处理后　　　　１４００３+３００４１＝４４０４４
此时成为回文数，共进行５次处理。
问题：给出n 后，求出使该数按照以上规则进行一系列处理后成为回文数的最少操作次数。

输入
n 一个整数（１≤n≤1000000）

输出
使n成为回文数的最少处理次数。 若开始给出的n是回文数，则输出０（即不需任何处理）。

样例输入
样例1: [复制]
67
样例2: [复制]
202
样例输出
样例1: [复制]
2
样例2: [复制]
0
提示[+]
*** 提示已隐藏，点击上方 [+] 可显示 ***
来源
2009年江苏省小学生信息学（计算机）奥赛*/

//
// Created by Hz Yang on 2017/6/14.
// 不用long  long 类型会超时

#include <cstdio>
#include <iostream>

using namespace std;

long long  n=0, s, cnt;

bool palindrome(long long m) {
    long long x = m;
    s=0;
    while (x > 0) {
        s = s * 10 + x % 10;
        x /= 10;
    }
    return s == m;
}

int main() {
    cin >> n;
    while( !palindrome(n)){
        n+=s;
        cnt++;
    }
    cout << cnt;
    return 0;
}

