/*1766: 【基础】学生排队
时间限制 : 1 Sec内存限制 : 64 Mb提交 : 830解决 : 389
题目描述
某班有n个学生（１＜n≤100），编号为１,２,…，n，同时给出k个关系，关系为一对整数〈x,y〉，表示x学生比y学生高。
例如：
n=4 即４个学生，同时给出５个关系：〈２,１〉 〈２,３〉 〈３,４〉 〈１,３〉 〈１,４〉
此时可以根据关系将学生由高到低排队，上例排队的结果为：　２　１　３　４
数据保证不会出现矛盾，也不会出现不确定的关系。
给出n, k后，按要求求出他们由高到低排队的结果。
 
输入
n k（即n个学生数，k个关系）
接下来k行，每行二个整数（表示关系）。
 
输出
排队的结果 若n≤6则全部输出，否则输出排队结果的前3个与最后3个（均以一个空格分开）。
 
样例输入 [复制]
4 5
2 1
2 3
3 4
1 3
1 4
样例输出 [复制]
2 1 3 4
提示[+]
*** 提示已隐藏，点击上方 [+] 可显示 ***
来源
2009年江苏省小学生信息学（计算机）奥赛*/

//
// Created by Hz Yang on 2017/6/19.
// 用数组b，记录数字在a中的存放位置，根据要求，不停检测交换，只到满足所有条件为止。
#include <cstdio>
#include <iostream>
#include <stack>

using namespace std;

int main() {
    int n,k,x,y,a[105],b[105];
    cin >> n >> k;
    int c[k+10][2];
    for (int i = 1; i <= n; ++i) {
        a[i]=i;
        b[i]=i;
    }
    for (int i = 0; i < k; ++i) {
        cin >>c[i][0]>>c[i][1];
    }
    int flag=1;
    while(flag){
        flag=0;
        for (int i = 0; i < k; ++i) {
            x=c[i][0];
            y=c[i][1];
            if(b[x]>b[y]){
                swap(a[b[x]],a[b[y]]);
                swap(b[x],b[y]);
                flag=1;
            }
        }
    }
    if(n<=6){
        for (int i = 1; i <=n ; ++i) {
            cout<<a[i]<<' ';
        }
        cout<<endl;
    }else printf("%d %d %d %d %d %d",a[1],a[2],a[3],a[n-2],a[n-1],a[n]);

    return 0;
}
