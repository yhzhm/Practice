/*1716: 【基础】进制数
时间限制 : 1 Sec内存限制 : 64 Mb提交 : 278解决 : 167
题目描述
给出一个正整数n（1≦N≦1023）,将其化为10位二进制数，然后计算出二进制数中的“1”的个数，若1 的个数为奇数，则在最高位前加上一个1,否则加一个0,最后将在此基础上形成的11位进制数，用3个十六进制数输出。 例如：输入23，化为二进制数为：0000010111 因为1的个数是4个，在最高位前加0,得到：00000010111 输出：0H，1H，7H 再例如：输入453，化为二进制数为：0111000101 因为1的个数是奇数，所以在最高位前加1，得到：10111000101 输出：5H,CH,5H
 
输入
键盘输入。一个正整数n。
 
输出
根据形成的11位进制数，用3个十六进制数输出。
 
样例输入 [复制]
453
样例输出 [复制]
5H,CH,5H
提示[+]
*** 提示已隐藏，点击上方 [+] 可显示 ***
来源
2005年江苏省小学生信息学（计算机）奥赛*/

//
// Created by Hz Yang on 2017/6/14.
//
#include <cstdio>
#include <iostream>
#include <cmath>

using namespace std;

int main() {
    int n, cnt = 0, i = 0;
    int a[15] = {0}, c[3] = {0};
    char b[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
    cin >> n;
    while (n > 0) {
        a[i++] = n % 2;
        cnt += n % 2;
        n /= 2;
    }
    if (cnt % 2 == 1) a[10] = 1;
    for (i = 0; i < 11; i++) {
        c[i / 4] += a[i] * pow(2, i % 4);
    }

    printf("%cH,%cH,%cH", b[c[2]], b[c[1]], b[c[0]]);
    return 0;
}

