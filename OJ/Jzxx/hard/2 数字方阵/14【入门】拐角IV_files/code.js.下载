/************************************
*	KaijuanStudio ACMclub			*
*	file:	code.js					*
*	adate:	2013/4/17 23:45			*
*	udate:	2013/6/9 15:58			*
*	QQ:		40112722				*
*	Web:	kaijuan.madeinchn.cn	*
************************************/
function id(i){return document.getElementById(i);}ie=document.all?1:0;var modes=['text/x-csrc','text/x-c++src','text/x-pascal','text/x-java','text/x-ruby','','text/x-python','application/x-httpd-php','text/x-perl','text/x-csharp'];function setLang(l){editor.setOption("mode",modes[l]);}function fullscreen(){var wrap=editor.getWrapperElement();var box=id("edtbox");var left=id('leftinfo');var fbt=id('fullbt');if(box.className=='fullscreen'){fbt.innerHTML='&#20840;&#12288;&#23631;';left.className=left.style.width=left.style.height=id('lbox').style.padding=left.style.background=box.className=box.style.width=wrap.style.height='';}else{fbt.innerHTML='&#36864;&#20986;&#20840;&#23631;';left.className=box.className='fullscreen';id('lbox').style.padding='30px';left.style.background='#fff';cgsize();}}function winHeight(){return window.innerHeight||(document.documentElement||document.body).clientHeight;}function winWidth(){return window.innerWidth||(document.documentElement||document.body).clientWidth;}window.onresize=function(){if(id('edtbox').className=='fullscreen'){cgsize();}}
function cgsize(){var wrap=editor.getWrapperElement();var box=id("edtbox");var left=id('leftinfo');left.style.width=box.style.width=box.style.left=(winWidth()/2)+'px';left.style.height=(winHeight()+17)+'px';wrap.style.height=(winHeight()-59)+'px';}CodeMirror.defineMode("htmlmixed",function(config,parserConfig){var htmlMode=CodeMirror.getMode(config,{name:"xml",htmlMode:true});var cssMode=CodeMirror.getMode(config,"css");var scriptTypes=[],scriptTypesConf=parserConfig&&parserConfig.scriptTypes;scriptTypes.push({matches:/^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^$/i,mode:CodeMirror.getMode(config,"javascript")});if(scriptTypesConf)for(var i=0;i<scriptTypesConf.length;++i){var conf=scriptTypesConf[i];scriptTypes.push({matches:conf.matches,mode:conf.mode&&CodeMirror.getMode(config,conf.mode)});}scriptTypes.push({matches:/./,mode:CodeMirror.getMode(config,"text/plain")});function html(stream,state){var tagName=state.htmlState.tagName;var style=htmlMode.token(stream,state.htmlState);if(tagName=="script"&&/\btag\b/.test(style)&&stream.current()==">"){var scriptType=stream.string.slice(Math.max(0,stream.pos-100),stream.pos).match(/\btype\s*=\s*("[^"]+"|'[^']+'|\S+)[^<]*$/i);scriptType=scriptType?scriptType[1]:"";if(scriptType&&/[\"\']/.test(scriptType.charAt(0)))scriptType=scriptType.slice(1,scriptType.length-1);for(var i=0;i<scriptTypes.length;++i){var tp=scriptTypes[i];if(typeof tp.matches=="string"?scriptType==tp.matches:tp.matches.test(scriptType)){if(tp.mode){state.token=script;state.localMode=tp.mode;state.localState=tp.mode.startState&&tp.mode.startState(htmlMode.indent(state.htmlState,""));}
break;}}}else if(tagName=="style"&&/\btag\b/.test(style)&&stream.current()==">"){state.token=css;state.localMode=cssMode;state.localState=cssMode.startState(htmlMode.indent(state.htmlState,""));}
return style;}
function maybeBackup(stream,pat,style){var cur=stream.current();var close=cur.search(pat),m;if(close>-1)stream.backUp(cur.length-close);else if(m=cur.match(/<\/?$/)){stream.backUp(cur.length);if(!stream.match(pat,false))stream.match(cur[0]);}
return style;}
function script(stream,state){if(stream.match(/^<\/\s*script\s*>/i,false)){state.token=html;state.localState=state.localMode=null;return html(stream,state);}
return maybeBackup(stream,/<\/\s*script\s*>/,state.localMode.token(stream,state.localState));}
function css(stream,state){if(stream.match(/^<\/\s*style\s*>/i,false)){state.token=html;state.localState=state.localMode=null;return html(stream,state);}
return maybeBackup(stream,/<\/\s*style\s*>/,cssMode.token(stream,state.localState));}
return{startState:function(){var state=htmlMode.startState();return{token:html,localMode:null,localState:null,htmlState:state};},copyState:function(state){if(state.localState)
var local=CodeMirror.copyState(state.localMode,state.localState);return{token:state.token,localMode:state.localMode,localState:local,htmlState:CodeMirror.copyState(htmlMode,state.htmlState)};},token:function(stream,state){return state.token(stream,state);},indent:function(state,textAfter){if(!state.localMode||/^\s*<\//.test(textAfter))
return htmlMode.indent(state.htmlState,textAfter);else if(state.localMode.indent)
return state.localMode.indent(state.localState,textAfter);else
return CodeMirror.Pass;},electricChars:"/{}:",innerMode:function(state){return{state:state.localState||state.htmlState,mode:state.localMode||htmlMode};}};},"xml","javascript","css");CodeMirror.defineMIME("text/html","htmlmixed");;CodeMirror.defineMode("xml",function(config,parserConfig){var indentUnit=config.indentUnit;var multilineTagIndentFactor=parserConfig.multilineTagIndentFactor||1;var Kludges=parserConfig.htmlMode?{autoSelfClosers:{'area':true,'base':true,'br':true,'col':true,'command':true,'embed':true,'frame':true,'hr':true,'img':true,'input':true,'keygen':true,'link':true,'meta':true,'param':true,'source':true,'track':true,'wbr':true},implicitlyClosed:{'dd':true,'li':true,'optgroup':true,'option':true,'p':true,'rp':true,'rt':true,'tbody':true,'td':true,'tfoot':true,'th':true,'tr':true},contextGrabbers:{'dd':{'dd':true,'dt':true},'dt':{'dd':true,'dt':true},'li':{'li':true},'option':{'option':true,'optgroup':true},'optgroup':{'optgroup':true},'p':{'address':true,'article':true,'aside':true,'blockquote':true,'dir':true,'div':true,'dl':true,'fieldset':true,'footer':true,'form':true,'h1':true,'h2':true,'h3':true,'h4':true,'h5':true,'h6':true,'header':true,'hgroup':true,'hr':true,'menu':true,'nav':true,'ol':true,'p':true,'pre':true,'section':true,'table':true,'ul':true},'rp':{'rp':true,'rt':true},'rt':{'rp':true,'rt':true},'tbody':{'tbody':true,'tfoot':true},'td':{'td':true,'th':true},'tfoot':{'tbody':true},'th':{'td':true,'th':true},'thead':{'tbody':true,'tfoot':true},'tr':{'tr':true}},doNotIndent:{"pre":true},allowUnquoted:true,allowMissing:true}:{autoSelfClosers:{},implicitlyClosed:{},contextGrabbers:{},doNotIndent:{},allowUnquoted:false,allowMissing:false};var alignCDATA=parserConfig.alignCDATA;var tagName,type;function inText(stream,state){function chain(parser){state.tokenize=parser;return parser(stream,state);}
var ch=stream.next();if(ch=="<"){if(stream.eat("!")){if(stream.eat("[")){if(stream.match("CDATA["))return chain(inBlock("atom","]]>"));else return null;}
else if(stream.match("--"))return chain(inBlock("comment","-->"));else if(stream.match("DOCTYPE",true,true)){stream.eatWhile(/[\w\._\-]/);return chain(doctype(1));}
else return null;}
else if(stream.eat("?")){stream.eatWhile(/[\w\._\-]/);state.tokenize=inBlock("meta","?>");return"meta";}
else{var isClose=stream.eat("/");tagName="";var c;while((c=stream.eat(/[^\s\u00a0=<>\"\'\/?]/)))tagName+=c;if(!tagName)return"error";type=isClose?"closeTag":"openTag";state.tokenize=inTag;return"tag";}}
else if(ch=="&"){var ok;if(stream.eat("#")){if(stream.eat("x")){ok=stream.eatWhile(/[a-fA-F\d]/)&&stream.eat(";");}else{ok=stream.eatWhile(/[\d]/)&&stream.eat(";");}}else{ok=stream.eatWhile(/[\w\.\-:]/)&&stream.eat(";");}
return ok?"atom":"error";}
else{stream.eatWhile(/[^&<]/);return null;}}
function inTag(stream,state){var ch=stream.next();if(ch==">"||(ch=="/"&&stream.eat(">"))){state.tokenize=inText;type=ch==">"?"endTag":"selfcloseTag";return"tag";}
else if(ch=="="){type="equals";return null;}
else if(/[\'\"]/.test(ch)){state.tokenize=inAttribute(ch);return state.tokenize(stream,state);}
else{stream.eatWhile(/[^\s\u00a0=<>\"\']/);return"word";}}
function inAttribute(quote){return function(stream,state){while(!stream.eol()){if(stream.next()==quote){state.tokenize=inTag;break;}}
return"string";};}
function inBlock(style,terminator){return function(stream,state){while(!stream.eol()){if(stream.match(terminator)){state.tokenize=inText;break;}
stream.next();}
return style;};}
function doctype(depth){return function(stream,state){var ch;while((ch=stream.next())!=null){if(ch=="<"){state.tokenize=doctype(depth+1);return state.tokenize(stream,state);}else if(ch==">"){if(depth==1){state.tokenize=inText;break;}else{state.tokenize=doctype(depth-1);return state.tokenize(stream,state);}}}
return"meta";};}
var curState,curStream,setStyle;function pass(){for(var i=arguments.length-1;i>=0;i--)curState.cc.push(arguments[i]);}
function cont(){pass.apply(null,arguments);return true;}
function pushContext(tagName,startOfLine){var noIndent=Kludges.doNotIndent.hasOwnProperty(tagName)||(curState.context&&curState.context.noIndent);curState.context={prev:curState.context,tagName:tagName,indent:curState.indented,startOfLine:startOfLine,noIndent:noIndent};}
function popContext(){if(curState.context)curState.context=curState.context.prev;}
function element(type){if(type=="openTag"){curState.tagName=tagName;curState.tagStart=curStream.column();return cont(attributes,endtag(curState.startOfLine));}else if(type=="closeTag"){var err=false;if(curState.context){if(curState.context.tagName!=tagName){if(Kludges.implicitlyClosed.hasOwnProperty(curState.context.tagName.toLowerCase())){popContext();}
err=!curState.context||curState.context.tagName!=tagName;}}else{err=true;}
if(err)setStyle="error";return cont(endclosetag(err));}
return cont();}
function endtag(startOfLine){return function(type){var tagName=curState.tagName;curState.tagName=curState.tagStart=null;if(type=="selfcloseTag"||(type=="endTag"&&Kludges.autoSelfClosers.hasOwnProperty(tagName.toLowerCase()))){maybePopContext(tagName.toLowerCase());return cont();}
if(type=="endTag"){maybePopContext(tagName.toLowerCase());pushContext(tagName,startOfLine);return cont();}
return cont();};}
function endclosetag(err){return function(type){if(err)setStyle="error";if(type=="endTag"){popContext();return cont();}
setStyle="error";return cont(arguments.callee);};}
function maybePopContext(nextTagName){var parentTagName;while(true){if(!curState.context){return;}
parentTagName=curState.context.tagName.toLowerCase();if(!Kludges.contextGrabbers.hasOwnProperty(parentTagName)||!Kludges.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)){return;}
popContext();}}
function attributes(type){if(type=="word"){setStyle="attribute";return cont(attribute,attributes);}
if(type=="endTag"||type=="selfcloseTag")return pass();setStyle="error";return cont(attributes);}
function attribute(type){if(type=="equals")return cont(attvalue,attributes);if(!Kludges.allowMissing)setStyle="error";else if(type=="word")setStyle="attribute";return(type=="endTag"||type=="selfcloseTag")?pass():cont();}
function attvalue(type){if(type=="string")return cont(attvaluemaybe);if(type=="word"&&Kludges.allowUnquoted){setStyle="string";return cont();}
setStyle="error";return(type=="endTag"||type=="selfCloseTag")?pass():cont();}
function attvaluemaybe(type){if(type=="string")return cont(attvaluemaybe);else return pass();}
return{startState:function(){return{tokenize:inText,cc:[],indented:0,startOfLine:true,tagName:null,tagStart:null,context:null};},token:function(stream,state){if(!state.tagName&&stream.sol()){state.startOfLine=true;state.indented=stream.indentation();}
if(stream.eatSpace())return null;setStyle=type=tagName=null;var style=state.tokenize(stream,state);state.type=type;if((style||type)&&style!="comment"){curState=state;curStream=stream;while(true){var comb=state.cc.pop()||element;if(comb(type||style))break;}}
state.startOfLine=false;return setStyle||style;},indent:function(state,textAfter,fullLine){var context=state.context;if((state.tokenize!=inTag&&state.tokenize!=inText)||context&&context.noIndent)
return fullLine?fullLine.match(/^(\s*)/)[0].length:0;if(state.tagName)return state.tagStart+indentUnit*multilineTagIndentFactor;if(alignCDATA&&/<!\[CDATA\[/.test(textAfter))return 0;if(context&&/^<\//.test(textAfter))
context=context.prev;while(context&&!context.startOfLine)
context=context.prev;if(context)return context.indent+indentUnit;else return 0;},electricChars:"/",configuration:parserConfig.htmlMode?"html":"xml"};});CodeMirror.defineMIME("text/xml","xml");CodeMirror.defineMIME("application/xml","xml");if(!CodeMirror.mimeModes.hasOwnProperty("text/html"))
CodeMirror.defineMIME("text/html",{name:"xml",htmlMode:true});;CodeMirror.defineMode("javascript",function(config,parserConfig){var indentUnit=config.indentUnit;var jsonMode=parserConfig.json;var isTS=parserConfig.typescript;var keywords=function(){function kw(type){return{type:type,style:"keyword"};}
var A=kw("keyword a"),B=kw("keyword b"),C=kw("keyword c");var operator=kw("operator"),atom={type:"atom",style:"atom"};var jsKeywords={"if":A,"while":A,"with":A,"else":B,"do":B,"try":B,"finally":B,"return":C,"break":C,"continue":C,"new":C,"delete":C,"throw":C,"var":kw("var"),"const":kw("var"),"let":kw("var"),"function":kw("function"),"catch":kw("catch"),"for":kw("for"),"switch":kw("switch"),"case":kw("case"),"default":kw("default"),"in":operator,"typeof":operator,"instanceof":operator,"true":atom,"false":atom,"null":atom,"undefined":atom,"NaN":atom,"Infinity":atom,"this":kw("this")};if(isTS){var type={type:"variable",style:"variable-3"};var tsKeywords={"interface":kw("interface"),"class":kw("class"),"extends":kw("extends"),"constructor":kw("constructor"),"public":kw("public"),"private":kw("private"),"protected":kw("protected"),"static":kw("static"),"super":kw("super"),"string":type,"number":type,"bool":type,"any":type};for(var attr in tsKeywords){jsKeywords[attr]=tsKeywords[attr];}}
return jsKeywords;}();var isOperatorChar=/[+\-*&%=<>!?|~^]/;function chain(stream,state,f){state.tokenize=f;return f(stream,state);}
function nextUntilUnescaped(stream,end){var escaped=false,next;while((next=stream.next())!=null){if(next==end&&!escaped)
return false;escaped=!escaped&&next=="\\";}
return escaped;}
var type,content;function ret(tp,style,cont){type=tp;content=cont;return style;}
function jsTokenBase(stream,state){var ch=stream.next();if(ch=='"'||ch=="'")
return chain(stream,state,jsTokenString(ch));else if(/[\[\]{}\(\),;\:\.]/.test(ch))
return ret(ch);else if(ch=="0"&&stream.eat(/x/i)){stream.eatWhile(/[\da-f]/i);return ret("number","number");}
else if(/\d/.test(ch)||ch=="-"&&stream.eat(/\d/)){stream.match(/^\d*(?:\.\d*)?(?:[eE][+\-]?\d+)?/);return ret("number","number");}
else if(ch=="/"){if(stream.eat("*")){return chain(stream,state,jsTokenComment);}
else if(stream.eat("/")){stream.skipToEnd();return ret("comment","comment");}
else if(state.lastType=="operator"||state.lastType=="keyword c"||/^[\[{}\(,;:]$/.test(state.lastType)){nextUntilUnescaped(stream,"/");stream.eatWhile(/[gimy]/);return ret("regexp","string-2");}
else{stream.eatWhile(isOperatorChar);return ret("operator",null,stream.current());}}
else if(ch=="#"){stream.skipToEnd();return ret("error","error");}
else if(isOperatorChar.test(ch)){stream.eatWhile(isOperatorChar);return ret("operator",null,stream.current());}
else{stream.eatWhile(/[\w\$_]/);var word=stream.current(),known=keywords.propertyIsEnumerable(word)&&keywords[word];return(known&&state.lastType!=".")?ret(known.type,known.style,word):ret("variable","variable",word);}}
function jsTokenString(quote){return function(stream,state){if(!nextUntilUnescaped(stream,quote))
state.tokenize=jsTokenBase;return ret("string","string");};}
function jsTokenComment(stream,state){var maybeEnd=false,ch;while(ch=stream.next()){if(ch=="/"&&maybeEnd){state.tokenize=jsTokenBase;break;}
maybeEnd=(ch=="*");}
return ret("comment","comment");}
var atomicTypes={"atom":true,"number":true,"variable":true,"string":true,"regexp":true,"this":true};function JSLexical(indented,column,type,align,prev,info){this.indented=indented;this.column=column;this.type=type;this.prev=prev;this.info=info;if(align!=null)this.align=align;}
function inScope(state,varname){for(var v=state.localVars;v;v=v.next)
if(v.name==varname)return true;}
function parseJS(state,style,type,content,stream){var cc=state.cc;cx.state=state;cx.stream=stream;cx.marked=null,cx.cc=cc;if(!state.lexical.hasOwnProperty("align"))
state.lexical.align=true;while(true){var combinator=cc.length?cc.pop():jsonMode?expression:statement;if(combinator(type,content)){while(cc.length&&cc[cc.length-1].lex)
cc.pop()();if(cx.marked)return cx.marked;if(type=="variable"&&inScope(state,content))return"variable-2";return style;}}}
var cx={state:null,column:null,marked:null,cc:null};function pass(){for(var i=arguments.length-1;i>=0;i--)cx.cc.push(arguments[i]);}
function cont(){pass.apply(null,arguments);return true;}
function register(varname){function inList(list){for(var v=list;v;v=v.next)
if(v.name==varname)return true;return false;}
var state=cx.state;if(state.context){cx.marked="def";if(inList(state.localVars))return;state.localVars={name:varname,next:state.localVars};}else{if(inList(state.globalVars))return;state.globalVars={name:varname,next:state.globalVars};}}
var defaultVars={name:"this",next:{name:"arguments"}};function pushcontext(){cx.state.context={prev:cx.state.context,vars:cx.state.localVars};cx.state.localVars=defaultVars;}
function popcontext(){cx.state.localVars=cx.state.context.vars;cx.state.context=cx.state.context.prev;}
function pushlex(type,info){var result=function(){var state=cx.state;state.lexical=new JSLexical(state.indented,cx.stream.column(),type,null,state.lexical,info);};result.lex=true;return result;}
function poplex(){var state=cx.state;if(state.lexical.prev){if(state.lexical.type==")")
state.indented=state.lexical.indented;state.lexical=state.lexical.prev;}}
poplex.lex=true;function expect(wanted){return function(type){if(type==wanted)return cont();else if(wanted==";")return pass();else return cont(arguments.callee);};}
function statement(type){if(type=="var")return cont(pushlex("vardef"),vardef1,expect(";"),poplex);if(type=="keyword a")return cont(pushlex("form"),expression,statement,poplex);if(type=="keyword b")return cont(pushlex("form"),statement,poplex);if(type=="{")return cont(pushlex("}"),block,poplex);if(type==";")return cont();if(type=="function")return cont(functiondef);if(type=="for")return cont(pushlex("form"),expect("("),pushlex(")"),forspec1,expect(")"),poplex,statement,poplex);if(type=="variable")return cont(pushlex("stat"),maybelabel);if(type=="switch")return cont(pushlex("form"),expression,pushlex("}","switch"),expect("{"),block,poplex,poplex);if(type=="case")return cont(expression,expect(":"));if(type=="default")return cont(expect(":"));if(type=="catch")return cont(pushlex("form"),pushcontext,expect("("),funarg,expect(")"),statement,poplex,popcontext);return pass(pushlex("stat"),expression,expect(";"),poplex);}
function expression(type){if(atomicTypes.hasOwnProperty(type))return cont(maybeoperator);if(type=="function")return cont(functiondef);if(type=="keyword c")return cont(maybeexpression);if(type=="(")return cont(pushlex(")"),maybeexpression,expect(")"),poplex,maybeoperator);if(type=="operator")return cont(expression);if(type=="[")return cont(pushlex("]"),commasep(expression,"]"),poplex,maybeoperator);if(type=="{")return cont(pushlex("}"),commasep(objprop,"}"),poplex,maybeoperator);return cont();}
function maybeexpression(type){if(type.match(/[;\}\)\],]/))return pass();return pass(expression);}
function maybeoperator(type,value){if(type=="operator"){if(/\+\+|--/.test(value))return cont(maybeoperator);if(value=="?")return cont(expression,expect(":"),expression);return cont(expression);}
if(type==";")return;if(type=="(")return cont(pushlex(")"),commasep(expression,")"),poplex,maybeoperator);if(type==".")return cont(property,maybeoperator);if(type=="[")return cont(pushlex("]"),expression,expect("]"),poplex,maybeoperator);}
function maybelabel(type){if(type==":")return cont(poplex,statement);return pass(maybeoperator,expect(";"),poplex);}
function property(type){if(type=="variable"){cx.marked="property";return cont();}}
function objprop(type,value){if(type=="variable"){cx.marked="property";if(value=="get"||value=="set")return cont(getterSetter);}else if(type=="number"||type=="string"){cx.marked=type+" property";}
if(atomicTypes.hasOwnProperty(type))return cont(expect(":"),expression);}
function getterSetter(type){if(type==":")return cont(expression);if(type!="variable")return cont(expect(":"),expression);cx.marked="property";return cont(functiondef);}
function commasep(what,end){function proceed(type){if(type==",")return cont(what,proceed);if(type==end)return cont();return cont(expect(end));}
return function(type){if(type==end)return cont();else return pass(what,proceed);};}
function block(type){if(type=="}")return cont();return pass(statement,block);}
function maybetype(type){if(type==":")return cont(typedef);return pass();}
function typedef(type){if(type=="variable"){cx.marked="variable-3";return cont();}
return pass();}
function vardef1(type,value){if(type=="variable"){register(value);return isTS?cont(maybetype,vardef2):cont(vardef2);}
return pass();}
function vardef2(type,value){if(value=="=")return cont(expression,vardef2);if(type==",")return cont(vardef1);}
function forspec1(type){if(type=="var")return cont(vardef1,expect(";"),forspec2);if(type==";")return cont(forspec2);if(type=="variable")return cont(formaybein);return cont(forspec2);}
function formaybein(_type,value){if(value=="in")return cont(expression);return cont(maybeoperator,forspec2);}
function forspec2(type,value){if(type==";")return cont(forspec3);if(value=="in")return cont(expression);return cont(expression,expect(";"),forspec3);}
function forspec3(type){if(type!=")")cont(expression);}
function functiondef(type,value){if(type=="variable"){register(value);return cont(functiondef);}
if(type=="(")return cont(pushlex(")"),pushcontext,commasep(funarg,")"),poplex,statement,popcontext);}
function funarg(type,value){if(type=="variable"){register(value);return isTS?cont(maybetype):cont();}}
return{startState:function(basecolumn){return{tokenize:jsTokenBase,lastType:null,cc:[],lexical:new JSLexical((basecolumn||0)-indentUnit,0,"block",false),localVars:parserConfig.localVars,globalVars:parserConfig.globalVars,context:parserConfig.localVars&&{vars:parserConfig.localVars},indented:0};},token:function(stream,state){if(stream.sol()){if(!state.lexical.hasOwnProperty("align"))
state.lexical.align=false;state.indented=stream.indentation();}
if(stream.eatSpace())return null;var style=state.tokenize(stream,state);if(type=="comment")return style;state.lastType=type;return parseJS(state,style,type,content,stream);},indent:function(state,textAfter){if(state.tokenize==jsTokenComment)return CodeMirror.Pass;if(state.tokenize!=jsTokenBase)return 0;var firstChar=textAfter&&textAfter.charAt(0),lexical=state.lexical;if(lexical.type=="stat"&&firstChar=="}")lexical=lexical.prev;var type=lexical.type,closing=firstChar==type;if(type=="vardef")return lexical.indented+(state.lastType=="operator"||state.lastType==","?4:0);else if(type=="form"&&firstChar=="{")return lexical.indented;else if(type=="form")return lexical.indented+indentUnit;else if(type=="stat")
return lexical.indented+(state.lastType=="operator"||state.lastType==","?indentUnit:0);else if(lexical.info=="switch"&&!closing)
return lexical.indented+(/^(?:case|default)\b/.test(textAfter)?indentUnit:2*indentUnit);else if(lexical.align)return lexical.column+(closing?0:1);else return lexical.indented+(closing?0:indentUnit);},electricChars:":{}",jsonMode:jsonMode};});CodeMirror.defineMIME("text/javascript","javascript");CodeMirror.defineMIME("text/ecmascript","javascript");CodeMirror.defineMIME("application/javascript","javascript");CodeMirror.defineMIME("application/ecmascript","javascript");CodeMirror.defineMIME("application/json",{name:"javascript",json:true});CodeMirror.defineMIME("text/typescript",{name:"javascript",typescript:true});CodeMirror.defineMIME("application/typescript",{name:"javascript",typescript:true});;CodeMirror.defineMode("css",function(config){return CodeMirror.getMode(config,"text/css");});CodeMirror.defineMode("css-base",function(config,parserConfig){"use strict";var indentUnit=config.indentUnit,hooks=parserConfig.hooks||{},atMediaTypes=parserConfig.atMediaTypes||{},atMediaFeatures=parserConfig.atMediaFeatures||{},propertyKeywords=parserConfig.propertyKeywords||{},colorKeywords=parserConfig.colorKeywords||{},valueKeywords=parserConfig.valueKeywords||{},allowNested=!!parserConfig.allowNested,type=null;function ret(style,tp){type=tp;return style;}
function tokenBase(stream,state){var ch=stream.next();if(hooks[ch]){var result=hooks[ch](stream,state);if(result!==false)return result;}
if(ch=="@"){stream.eatWhile(/[\w\\\-]/);return ret("def",stream.current());}
else if(ch=="=")ret(null,"compare");else if((ch=="~"||ch=="|")&&stream.eat("="))return ret(null,"compare");else if(ch=="\""||ch=="'"){state.tokenize=tokenString(ch);return state.tokenize(stream,state);}
else if(ch=="#"){stream.eatWhile(/[\w\\\-]/);return ret("atom","hash");}
else if(ch=="!"){stream.match(/^\s*\w*/);return ret("keyword","important");}
else if(/\d/.test(ch)){stream.eatWhile(/[\w.%]/);return ret("number","unit");}
else if(ch==="-"){if(/\d/.test(stream.peek())){stream.eatWhile(/[\w.%]/);return ret("number","unit");}else if(stream.match(/^[^-]+-/)){return ret("meta","meta");}}
else if(/[,+>*\/]/.test(ch)){return ret(null,"select-op");}
else if(ch=="."&&stream.match(/^-?[_a-z][_a-z0-9-]*/i)){return ret("qualifier","qualifier");}
else if(ch==":"){return ret("operator",ch);}
else if(/[;{}\[\]\(\)]/.test(ch)){return ret(null,ch);}
else if(ch=="u"&&stream.match("rl(")){stream.backUp(1);state.tokenize=tokenParenthesized;return ret("property","variable");}
else{stream.eatWhile(/[\w\\\-]/);return ret("property","variable");}}
function tokenString(quote,nonInclusive){return function(stream,state){var escaped=false,ch;while((ch=stream.next())!=null){if(ch==quote&&!escaped)
break;escaped=!escaped&&ch=="\\";}
if(!escaped){if(nonInclusive)stream.backUp(1);state.tokenize=tokenBase;}
return ret("string","string");};}
function tokenParenthesized(stream,state){stream.next();if(!stream.match(/\s*[\"\']/,false))
state.tokenize=tokenString(")",true);else
state.tokenize=tokenBase;return ret(null,"(");}
return{startState:function(base){return{tokenize:tokenBase,baseIndent:base||0,stack:[]};},token:function(stream,state){state.tokenize=state.tokenize||tokenBase;if(state.tokenize==tokenBase&&stream.eatSpace())return null;var style=state.tokenize(stream,state);if(style&&typeof style!="string")style=ret(style[0],style[1]);var context=state.stack[state.stack.length-1];if(style=="variable"){if(type=="variable-definition")state.stack.push("propertyValue");return"variable-2";}else if(style=="property"){if(context=="propertyValue"){if(valueKeywords[stream.current()]){style="string-2";}else if(colorKeywords[stream.current()]){style="keyword";}else{style="variable-2";}}else if(context=="rule"){if(!propertyKeywords[stream.current()]){style+=" error";}}else if(context=="block"){if(propertyKeywords[stream.current()]){style="property";}else if(colorKeywords[stream.current()]){style="keyword";}else if(valueKeywords[stream.current()]){style="string-2";}else{style="tag";}}else if(!context||context=="@media{"){style="tag";}else if(context=="@media"){if(atMediaTypes[stream.current()]){style="attribute";}else if(/^(only|not)$/i.test(stream.current())){style="keyword";}else if(stream.current().toLowerCase()=="and"){style="error";}else if(atMediaFeatures[stream.current()]){style="error";}else{style="attribute error";}}else if(context=="@mediaType"){if(atMediaTypes[stream.current()]){style="attribute";}else if(stream.current().toLowerCase()=="and"){style="operator";}else if(/^(only|not)$/i.test(stream.current())){style="error";}else if(atMediaFeatures[stream.current()]){style="error";}else{style="error";}}else if(context=="@mediaType("){if(propertyKeywords[stream.current()]){}else if(atMediaTypes[stream.current()]){style="error";}else if(stream.current().toLowerCase()=="and"){style="operator";}else if(/^(only|not)$/i.test(stream.current())){style="error";}else{style+=" error";}}else{style="error";}}else if(style=="atom"){if(!context||context=="@media{"||context=="block"){style="builtin";}else if(context=="propertyValue"){if(!/^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(stream.current())){style+=" error";}}else{style="error";}}else if(context=="@media"&&type=="{"){style="error";}
if(type=="{"){if(context=="@media"||context=="@mediaType"){state.stack.pop();state.stack[state.stack.length-1]="@media{";}
else{var newContext=allowNested?"block":"rule";state.stack.push(newContext);}}
else if(type=="}"){var lastState=state.stack[state.stack.length-1];if(lastState=="interpolation")style="operator";state.stack.pop();if(context=="propertyValue")state.stack.pop();}
else if(type=="interpolation")state.stack.push("interpolation");else if(type=="@media")state.stack.push("@media");else if(context=="@media"&&/\b(keyword|attribute)\b/.test(style))
state.stack.push("@mediaType");else if(context=="@mediaType"&&stream.current()==",")state.stack.pop();else if(context=="@mediaType"&&type=="(")state.stack.push("@mediaType(");else if(context=="@mediaType("&&type==")")state.stack.pop();else if((context=="rule"||context=="block")&&type==":")state.stack.push("propertyValue");else if(context=="propertyValue"&&type==";")state.stack.pop();return style;},indent:function(state,textAfter){var n=state.stack.length;if(/^\}/.test(textAfter))
n-=state.stack[state.stack.length-1]=="propertyValue"?2:1;return state.baseIndent+n*indentUnit;},electricChars:"}"};});(function(){function keySet(array){var keys={};for(var i=0;i<array.length;++i){keys[array[i]]=true;}
return keys;}
var atMediaTypes=keySet(["all","aural","braille","handheld","print","projection","screen","tty","tv","embossed"]);var atMediaFeatures=keySet(["width","min-width","max-width","height","min-height","max-height","device-width","min-device-width","max-device-width","device-height","min-device-height","max-device-height","aspect-ratio","min-aspect-ratio","max-aspect-ratio","device-aspect-ratio","min-device-aspect-ratio","max-device-aspect-ratio","color","min-color","max-color","color-index","min-color-index","max-color-index","monochrome","min-monochrome","max-monochrome","resolution","min-resolution","max-resolution","scan","grid"]);var propertyKeywords=keySet(["align-content","align-items","align-self","alignment-adjust","alignment-baseline","anchor-point","animation","animation-delay","animation-direction","animation-duration","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","appearance","azimuth","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","baseline-shift","binding","bleed","bookmark-label","bookmark-level","bookmark-state","bookmark-target","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","color","color-profile","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","crop","cue","cue-after","cue-before","cursor","direction","display","dominant-baseline","drop-initial-after-adjust","drop-initial-after-align","drop-initial-before-adjust","drop-initial-before-align","drop-initial-size","drop-initial-value","elevation","empty-cells","fit","fit-position","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","float-offset","font","font-feature-settings","font-family","font-kerning","font-language-override","font-size","font-size-adjust","font-stretch","font-style","font-synthesis","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-weight","grid-cell","grid-column","grid-column-align","grid-column-sizing","grid-column-span","grid-columns","grid-flow","grid-row","grid-row-align","grid-row-sizing","grid-row-span","grid-rows","grid-template","hanging-punctuation","height","hyphens","icon","image-orientation","image-rendering","image-resolution","inline-box-align","justify-content","left","letter-spacing","line-break","line-height","line-stacking","line-stacking-ruby","line-stacking-shift","line-stacking-strategy","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marker-offset","marks","marquee-direction","marquee-loop","marquee-play-count","marquee-speed","marquee-style","max-height","max-width","min-height","min-width","move-to","nav-down","nav-index","nav-left","nav-right","nav-up","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-style","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","page-policy","pause","pause-after","pause-before","perspective","perspective-origin","pitch","pitch-range","play-during","position","presentation-level","punctuation-trim","quotes","rendering-intent","resize","rest","rest-after","rest-before","richness","right","rotation","rotation-point","ruby-align","ruby-overhang","ruby-position","ruby-span","size","speak","speak-as","speak-header","speak-numeral","speak-punctuation","speech-rate","stress","string-set","tab-size","table-layout","target","target-name","target-new","target-position","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-height","text-indent","text-justify","text-outline","text-shadow","text-space-collapse","text-transform","text-underline-position","text-wrap","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","volume","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"]);var colorKeywords=keySet(["black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua"]);var valueKeywords=keySet(["above","absolute","activeborder","activecaption","afar","after-white-space","ahead","alias","all","all-scroll","alternate","always","amharic","amharic-abegede","antialiased","appworkspace","arabic-indic","armenian","asterisks","auto","avoid","background","backwards","baseline","below","bidi-override","binary","bengali","blink","block","block-axis","bold","bolder","border","border-box","both","bottom","break-all","break-word","button","button-bevel","buttonface","buttonhighlight","buttonshadow","buttontext","cambodian","capitalize","caps-lock-indicator","caption","captiontext","caret","cell","center","checkbox","circle","cjk-earthly-branch","cjk-heavenly-stem","cjk-ideographic","clear","clip","close-quote","col-resize","collapse","compact","condensed","contain","content","content-box","context-menu","continuous","copy","cover","crop","cross","crosshair","currentcolor","cursive","dashed","decimal","decimal-leading-zero","default","default-button","destination-atop","destination-in","destination-out","destination-over","devanagari","disc","discard","document","dot-dash","dot-dot-dash","dotted","double","down","e-resize","ease","ease-in","ease-in-out","ease-out","element","ellipsis","embed","end","ethiopic","ethiopic-abegede","ethiopic-abegede-am-et","ethiopic-abegede-gez","ethiopic-abegede-ti-er","ethiopic-abegede-ti-et","ethiopic-halehame-aa-er","ethiopic-halehame-aa-et","ethiopic-halehame-am-et","ethiopic-halehame-gez","ethiopic-halehame-om-et","ethiopic-halehame-sid-et","ethiopic-halehame-so-et","ethiopic-halehame-ti-er","ethiopic-halehame-ti-et","ethiopic-halehame-tig","ew-resize","expanded","extra-condensed","extra-expanded","fantasy","fast","fill","fixed","flat","footnotes","forwards","from","geometricPrecision","georgian","graytext","groove","gujarati","gurmukhi","hand","hangul","hangul-consonant","hebrew","help","hidden","hide","higher","highlight","highlighttext","hiragana","hiragana-iroha","horizontal","hsl","hsla","icon","ignore","inactiveborder","inactivecaption","inactivecaptiontext","infinite","infobackground","infotext","inherit","initial","inline","inline-axis","inline-block","inline-table","inset","inside","intrinsic","invert","italic","justify","kannada","katakana","katakana-iroha","khmer","landscape","lao","large","larger","left","level","lighter","line-through","linear","lines","list-item","listbox","listitem","local","logical","loud","lower","lower-alpha","lower-armenian","lower-greek","lower-hexadecimal","lower-latin","lower-norwegian","lower-roman","lowercase","ltr","malayalam","match","media-controls-background","media-current-time-display","media-fullscreen-button","media-mute-button","media-play-button","media-return-to-realtime-button","media-rewind-button","media-seek-back-button","media-seek-forward-button","media-slider","media-sliderthumb","media-time-remaining-display","media-volume-slider","media-volume-slider-container","media-volume-sliderthumb","medium","menu","menulist","menulist-button","menulist-text","menulist-textfield","menutext","message-box","middle","min-intrinsic","mix","mongolian","monospace","move","multiple","myanmar","n-resize","narrower","ne-resize","nesw-resize","no-close-quote","no-drop","no-open-quote","no-repeat","none","normal","not-allowed","nowrap","ns-resize","nw-resize","nwse-resize","oblique","octal","open-quote","optimizeLegibility","optimizeSpeed","oriya","oromo","outset","outside","overlay","overline","padding","padding-box","painted","paused","persian","plus-darker","plus-lighter","pointer","portrait","pre","pre-line","pre-wrap","preserve-3d","progress","push-button","radio","read-only","read-write","read-write-plaintext-only","relative","repeat","repeat-x","repeat-y","reset","reverse","rgb","rgba","ridge","right","round","row-resize","rtl","run-in","running","s-resize","sans-serif","scroll","scrollbar","se-resize","searchfield","searchfield-cancel-button","searchfield-decoration","searchfield-results-button","searchfield-results-decoration","semi-condensed","semi-expanded","separate","serif","show","sidama","single","skip-white-space","slide","slider-horizontal","slider-vertical","sliderthumb-horizontal","sliderthumb-vertical","slow","small","small-caps","small-caption","smaller","solid","somali","source-atop","source-in","source-out","source-over","space","square","square-button","start","static","status-bar","stretch","stroke","sub","subpixel-antialiased","super","sw-resize","table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row","table-row-group","telugu","text","text-bottom","text-top","textarea","textfield","thai","thick","thin","threeddarkshadow","threedface","threedhighlight","threedlightshadow","threedshadow","tibetan","tigre","tigrinya-er","tigrinya-er-abegede","tigrinya-et","tigrinya-et-abegede","to","top","transparent","ultra-condensed","ultra-expanded","underline","up","upper-alpha","upper-armenian","upper-greek","upper-hexadecimal","upper-latin","upper-norwegian","upper-roman","uppercase","urdu","url","vertical","vertical-text","visible","visibleFill","visiblePainted","visibleStroke","visual","w-resize","wait","wave","white","wider","window","windowframe","windowtext","x-large","x-small","xor","xx-large","xx-small"]);function tokenCComment(stream,state){var maybeEnd=false,ch;while((ch=stream.next())!=null){if(maybeEnd&&ch=="/"){state.tokenize=null;break;}
maybeEnd=(ch=="*");}
return["comment","comment"];}
CodeMirror.defineMIME("text/css",{atMediaTypes:atMediaTypes,atMediaFeatures:atMediaFeatures,propertyKeywords:propertyKeywords,colorKeywords:colorKeywords,valueKeywords:valueKeywords,hooks:{"<":function(stream,state){function tokenSGMLComment(stream,state){var dashes=0,ch;while((ch=stream.next())!=null){if(dashes>=2&&ch==">"){state.tokenize=null;break;}
dashes=(ch=="-")?dashes+1:0;}
return["comment","comment"];}
if(stream.eat("!")){state.tokenize=tokenSGMLComment;return tokenSGMLComment(stream,state);}},"/":function(stream,state){if(stream.eat("*")){state.tokenize=tokenCComment;return tokenCComment(stream,state);}
return false;}},name:"css-base"});CodeMirror.defineMIME("text/x-scss",{atMediaTypes:atMediaTypes,atMediaFeatures:atMediaFeatures,propertyKeywords:propertyKeywords,colorKeywords:colorKeywords,valueKeywords:valueKeywords,allowNested:true,hooks:{"$":function(stream){stream.match(/^[\w-]+/);if(stream.peek()==":"){return["variable","variable-definition"];}
return["variable","variable"];},"/":function(stream,state){if(stream.eat("/")){stream.skipToEnd();return["comment","comment"];}else if(stream.eat("*")){state.tokenize=tokenCComment;return tokenCComment(stream,state);}else{return["operator","operator"];}},"#":function(stream){if(stream.eat("{")){return["operator","interpolation"];}else{stream.eatWhile(/[\w\\\-]/);return["atom","hash"];}}},name:"css-base"});})();;CodeMirror.defineMode("clike",function(config,parserConfig){var indentUnit=config.indentUnit,statementIndentUnit=parserConfig.statementIndentUnit||indentUnit,dontAlignCalls=parserConfig.dontAlignCalls,keywords=parserConfig.keywords||{},builtin=parserConfig.builtin||{},blockKeywords=parserConfig.blockKeywords||{},atoms=parserConfig.atoms||{},hooks=parserConfig.hooks||{},multiLineStrings=parserConfig.multiLineStrings;var isOperatorChar=/[+\-*&%=<>!?|\/]/;var curPunc;function tokenBase(stream,state){var ch=stream.next();if(hooks[ch]){var result=hooks[ch](stream,state);if(result!==false)return result;}
if(ch=='"'||ch=="'"){state.tokenize=tokenString(ch);return state.tokenize(stream,state);}
if(/[\[\]{}\(\),;\:\.]/.test(ch)){curPunc=ch;return null;}
if(/\d/.test(ch)){stream.eatWhile(/[\w\.]/);return"number";}
if(ch=="/"){if(stream.eat("*")){state.tokenize=tokenComment;return tokenComment(stream,state);}
if(stream.eat("/")){stream.skipToEnd();return"comment";}}
if(isOperatorChar.test(ch)){stream.eatWhile(isOperatorChar);return"operator";}
stream.eatWhile(/[\w\$_]/);var cur=stream.current();if(keywords.propertyIsEnumerable(cur)){if(blockKeywords.propertyIsEnumerable(cur))curPunc="newstatement";return"keyword";}
if(builtin.propertyIsEnumerable(cur)){if(blockKeywords.propertyIsEnumerable(cur))curPunc="newstatement";return"builtin";}
if(atoms.propertyIsEnumerable(cur))return"atom";return"variable";}
function tokenString(quote){return function(stream,state){var escaped=false,next,end=false;while((next=stream.next())!=null){if(next==quote&&!escaped){end=true;break;}
escaped=!escaped&&next=="\\";}
if(end||!(escaped||multiLineStrings))
state.tokenize=null;return"string";};}
function tokenComment(stream,state){var maybeEnd=false,ch;while(ch=stream.next()){if(ch=="/"&&maybeEnd){state.tokenize=null;break;}
maybeEnd=(ch=="*");}
return"comment";}
function Context(indented,column,type,align,prev){this.indented=indented;this.column=column;this.type=type;this.align=align;this.prev=prev;}
function pushContext(state,col,type){var indent=state.indented;if(state.context&&state.context.type=="statement")
indent=state.context.indented;return state.context=new Context(indent,col,type,null,state.context);}
function popContext(state){var t=state.context.type;if(t==")"||t=="]"||t=="}")
state.indented=state.context.indented;return state.context=state.context.prev;}
return{startState:function(basecolumn){return{tokenize:null,context:new Context((basecolumn||0)-indentUnit,0,"top",false),indented:0,startOfLine:true};},token:function(stream,state){var ctx=state.context;if(stream.sol()){if(ctx.align==null)ctx.align=false;state.indented=stream.indentation();state.startOfLine=true;}
if(stream.eatSpace())return null;curPunc=null;var style=(state.tokenize||tokenBase)(stream,state);if(style=="comment"||style=="meta")return style;if(ctx.align==null)ctx.align=true;if((curPunc==";"||curPunc==":"||curPunc==",")&&ctx.type=="statement")popContext(state);else if(curPunc=="{")pushContext(state,stream.column(),"}");else if(curPunc=="[")pushContext(state,stream.column(),"]");else if(curPunc=="(")pushContext(state,stream.column(),")");else if(curPunc=="}"){while(ctx.type=="statement")ctx=popContext(state);if(ctx.type=="}")ctx=popContext(state);while(ctx.type=="statement")ctx=popContext(state);}
else if(curPunc==ctx.type)popContext(state);else if(((ctx.type=="}"||ctx.type=="top")&&curPunc!=';')||(ctx.type=="statement"&&curPunc=="newstatement"))
pushContext(state,stream.column(),"statement");state.startOfLine=false;return style;},indent:function(state,textAfter){if(state.tokenize!=tokenBase&&state.tokenize!=null)return CodeMirror.Pass;var ctx=state.context,firstChar=textAfter&&textAfter.charAt(0);if(ctx.type=="statement"&&firstChar=="}")ctx=ctx.prev;var closing=firstChar==ctx.type;if(ctx.type=="statement")return ctx.indented+(firstChar=="{"?0:statementIndentUnit);else if(dontAlignCalls&&ctx.type==")"&&!closing)return ctx.indented+statementIndentUnit;else if(ctx.align)return ctx.column+(closing?0:1);else return ctx.indented+(closing?0:indentUnit);},electricChars:"{}"};});(function(){function words(str){var obj={},words=str.split(" ");for(var i=0;i<words.length;++i)obj[words[i]]=true;return obj;}
var cKeywords="auto if break int case long char register continue return default short do sizeof "+"double static else struct entry switch extern typedef float union for unsigned "+"goto while enum void const signed volatile";function cppHook(stream,state){if(!state.startOfLine)return false;for(;;){if(stream.skipTo("\\")){stream.next();if(stream.eol()){state.tokenize=cppHook;break;}}else{stream.skipToEnd();state.tokenize=null;break;}}
return"meta";}
function tokenAtString(stream,state){var next;while((next=stream.next())!=null){if(next=='"'&&!stream.eat('"')){state.tokenize=null;break;}}
return"string";}
function mimes(ms,mode){for(var i=0;i<ms.length;++i)CodeMirror.defineMIME(ms[i],mode);}
mimes(["text/x-csrc","text/x-c","text/x-chdr"],{name:"clike",keywords:words(cKeywords),blockKeywords:words("case do else for if switch while struct"),atoms:words("null"),hooks:{"#":cppHook}});mimes(["text/x-c++src","text/x-c++hdr"],{name:"clike",keywords:words(cKeywords+" asm dynamic_cast namespace reinterpret_cast try bool explicit new "+"static_cast typeid catch operator template typename class friend private "+"this using const_cast inline public throw virtual delete mutable protected "+"wchar_t"),blockKeywords:words("catch class do else finally for if struct switch try while"),atoms:words("true false null"),hooks:{"#":cppHook}});CodeMirror.defineMIME("text/x-java",{name:"clike",keywords:words("abstract assert boolean break byte case catch char class const continue default "+"do double else enum extends final finally float for goto if implements import "+"instanceof int interface long native new package private protected public "+"return short static strictfp super switch synchronized this throw throws transient "+"try void volatile while"),blockKeywords:words("catch class do else finally for if switch try while"),atoms:words("true false null"),hooks:{"@":function(stream){stream.eatWhile(/[\w\$_]/);return"meta";}}});CodeMirror.defineMIME("text/x-csharp",{name:"clike",keywords:words("abstract as base break case catch checked class const continue"+" default delegate do else enum event explicit extern finally fixed for"+" foreach goto if implicit in interface internal is lock namespace new"+" operator out override params private protected public readonly ref return sealed"+" sizeof stackalloc static struct switch this throw try typeof unchecked"+" unsafe using virtual void volatile while add alias ascending descending dynamic from get"+" global group into join let orderby partial remove select set value var yield"),blockKeywords:words("catch class do else finally for foreach if struct switch try while"),builtin:words("Boolean Byte Char DateTime DateTimeOffset Decimal Double"+" Guid Int16 Int32 Int64 Object SByte Single String TimeSpan UInt16 UInt32"+" UInt64 bool byte char decimal double short int long object"+" sbyte float string ushort uint ulong"),atoms:words("true false null"),hooks:{"@":function(stream,state){if(stream.eat('"')){state.tokenize=tokenAtString;return tokenAtString(stream,state);}
stream.eatWhile(/[\w\$_]/);return"meta";}}});CodeMirror.defineMIME("text/x-scala",{name:"clike",keywords:words("abstract case catch class def do else extends false final finally for forSome if "+"implicit import lazy match new null object override package private protected return "+"sealed super this throw trait try trye type val var while with yield _ : = => <- <: "+"<% >: # @ "+"assert assume require print println printf readLine readBoolean readByte readShort "+"readChar readInt readLong readFloat readDouble "+"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either "+"Enumeration Equiv Error Exception Fractional Function IndexedSeq Integral Iterable "+"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering "+"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder "+"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector :: #:: "+"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable "+"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process "+"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String "+"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void"),blockKeywords:words("catch class do else finally for forSome if match switch try while"),atoms:words("true false null"),hooks:{"@":function(stream){stream.eatWhile(/[\w\$_]/);return"meta";}}});}());;(function(){function keywords(str){var obj={},words=str.split(" ");for(var i=0;i<words.length;++i)obj[words[i]]=true;return obj;}
function heredoc(delim){return function(stream,state){if(stream.match(delim))state.tokenize=null;else stream.skipToEnd();return"string";};}
var phpConfig={name:"clike",keywords:keywords("abstract and array as break case catch class clone const continue declare default "+"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final "+"for foreach function global goto if implements interface instanceof namespace "+"new or private protected public static switch throw trait try use var while xor "+"die echo empty exit eval include include_once isset list require require_once return "+"print unset __halt_compiler self static parent"),blockKeywords:keywords("catch do else elseif for foreach if switch try while"),atoms:keywords("true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__"),builtin:keywords("func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport echo print global static exit array empty eval isset unset die include require include_once require_once"),multiLineStrings:true,hooks:{"$":function(stream){stream.eatWhile(/[\w\$_]/);return"variable-2";},"<":function(stream,state){if(stream.match(/<</)){stream.eatWhile(/[\w\.]/);state.tokenize=heredoc(stream.current().slice(3));return state.tokenize(stream,state);}
return false;},"#":function(stream){while(!stream.eol()&&!stream.match("?>",false))stream.next();return"comment";},"/":function(stream){if(stream.eat("/")){while(!stream.eol()&&!stream.match("?>",false))stream.next();return"comment";}
return false;}}};CodeMirror.defineMode("php",function(config,parserConfig){var htmlMode=CodeMirror.getMode(config,"text/html");var phpMode=CodeMirror.getMode(config,phpConfig);function dispatch(stream,state){var isPHP=state.curMode==phpMode;if(stream.sol()&&state.pending!='"')state.pending=null;if(!isPHP){if(stream.match(/^<\?\w*/)){state.curMode=phpMode;state.curState=state.php;return"meta";}
if(state.pending=='"'){while(!stream.eol()&&stream.next()!='"'){}
var style="string";}else if(state.pending&&stream.pos<state.pending.end){stream.pos=state.pending.end;var style=state.pending.style;}else{var style=htmlMode.token(stream,state.curState);}
state.pending=null;var cur=stream.current(),openPHP=cur.search(/<\?/);if(openPHP!=-1){if(style=="string"&&/\"$/.test(cur)&&!/\?>/.test(cur))state.pending='"';else state.pending={end:stream.pos,style:style};stream.backUp(cur.length-openPHP);}
return style;}else if(isPHP&&state.php.tokenize==null&&stream.match("?>")){state.curMode=htmlMode;state.curState=state.html;return"meta";}else{return phpMode.token(stream,state.curState);}}
return{startState:function(){var html=CodeMirror.startState(htmlMode),php=CodeMirror.startState(phpMode);return{html:html,php:php,curMode:parserConfig.startOpen?phpMode:htmlMode,curState:parserConfig.startOpen?php:html,pending:null};},copyState:function(state){var html=state.html,htmlNew=CodeMirror.copyState(htmlMode,html),php=state.php,phpNew=CodeMirror.copyState(phpMode,php),cur;if(state.curMode==htmlMode)cur=htmlNew;else cur=phpNew;return{html:htmlNew,php:phpNew,curMode:state.curMode,curState:cur,pending:state.pending};},token:dispatch,indent:function(state,textAfter){if((state.curMode!=phpMode&&/^\s*<\//.test(textAfter))||(state.curMode==phpMode&&/^\?>/.test(textAfter)))
return htmlMode.indent(state.html,textAfter);return state.curMode.indent(state.curState,textAfter);},electricChars:"/{}:",innerMode:function(state){return{state:state.curState,mode:state.curMode};}};},"htmlmixed","clike");CodeMirror.defineMIME("application/x-httpd-php","php");CodeMirror.defineMIME("application/x-httpd-php-open",{name:"php",startOpen:true});CodeMirror.defineMIME("text/x-php",phpConfig);})();;CodeMirror.defineMode("ruby",function(config){function wordObj(words){var o={};for(var i=0,e=words.length;i<e;++i)o[words[i]]=true;return o;}
var keywords=wordObj(["alias","and","BEGIN","begin","break","case","class","def","defined?","do","else","elsif","END","end","ensure","false","for","if","in","module","next","not","or","redo","rescue","retry","return","self","super","then","true","undef","unless","until","when","while","yield","nil","raise","throw","catch","fail","loop","callcc","caller","lambda","proc","public","protected","private","require","load","require_relative","extend","autoload"]);var indentWords=wordObj(["def","class","case","for","while","do","module","then","catch","loop","proc","begin"]);var dedentWords=wordObj(["end","until"]);var matching={"[":"]","{":"}","(":")"};var curPunc;function chain(newtok,stream,state){state.tokenize.push(newtok);return newtok(stream,state);}
function tokenBase(stream,state){curPunc=null;if(stream.sol()&&stream.match("=begin")&&stream.eol()){state.tokenize.push(readBlockComment);return"comment";}
if(stream.eatSpace())return null;var ch=stream.next(),m;if(ch=="`"||ch=="'"||ch=='"'||(ch=="/"&&!stream.eol()&&stream.peek()!=" ")){return chain(readQuoted(ch,"string",ch=='"'||ch=="`"),stream,state);}else if(ch=="%"){var style,embed=false;if(stream.eat("s"))style="atom";else if(stream.eat(/[WQ]/)){style="string";embed=true;}
else if(stream.eat(/[wxqr]/))style="string";var delim=stream.eat(/[^\w\s]/);if(!delim)return"operator";if(matching.propertyIsEnumerable(delim))delim=matching[delim];return chain(readQuoted(delim,style,embed,true),stream,state);}else if(ch=="#"){stream.skipToEnd();return"comment";}else if(ch=="<"&&(m=stream.match(/^<-?[\`\"\']?([a-zA-Z_?]\w*)[\`\"\']?(?:;|$)/))){return chain(readHereDoc(m[1]),stream,state);}else if(ch=="0"){if(stream.eat("x"))stream.eatWhile(/[\da-fA-F]/);else if(stream.eat("b"))stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);return"number";}else if(/\d/.test(ch)){stream.match(/^[\d_]*(?:\.[\d_]+)?(?:[eE][+\-]?[\d_]+)?/);return"number";}else if(ch=="?"){while(stream.match(/^\\[CM]-/)){}
if(stream.eat("\\"))stream.eatWhile(/\w/);else stream.next();return"string";}else if(ch==":"){if(stream.eat("'"))return chain(readQuoted("'","atom",false),stream,state);if(stream.eat('"'))return chain(readQuoted('"',"atom",true),stream,state);stream.eatWhile(/[\w\?]/);return"atom";}else if(ch=="@"){stream.eat("@");stream.eatWhile(/[\w\?]/);return"variable-2";}else if(ch=="$"){stream.next();stream.eatWhile(/[\w\?]/);return"variable-3";}else if(/\w/.test(ch)){stream.eatWhile(/[\w\?]/);if(stream.eat(":"))return"atom";return"ident";}else if(ch=="|"&&(state.varList||state.lastTok=="{"||state.lastTok=="do")){curPunc="|";return null;}else if(/[\(\)\[\]{}\\;]/.test(ch)){curPunc=ch;return null;}else if(ch=="-"&&stream.eat(">")){return"arrow";}else if(/[=+\-\/*:\.^%<>~|]/.test(ch)){stream.eatWhile(/[=+\-\/*:\.^%<>~|]/);return"operator";}else{return null;}}
function tokenBaseUntilBrace(){var depth=1;return function(stream,state){if(stream.peek()=="}"){depth--;if(depth==0){state.tokenize.pop();return state.tokenize[state.tokenize.length-1](stream,state);}}else if(stream.peek()=="{"){depth++;}
return tokenBase(stream,state);};}
function readQuoted(quote,style,embed,unescaped){return function(stream,state){var escaped=false,ch;while((ch=stream.next())!=null){if(ch==quote&&(unescaped||!escaped)){state.tokenize.pop();break;}
if(embed&&ch=="#"&&!escaped&&stream.eat("{")){state.tokenize.push(tokenBaseUntilBrace(arguments.callee));break;}
escaped=!escaped&&ch=="\\";}
return style;};}
function readHereDoc(phrase){return function(stream,state){if(stream.match(phrase))state.tokenize.pop();else stream.skipToEnd();return"string";};}
function readBlockComment(stream,state){if(stream.sol()&&stream.match("=end")&&stream.eol())
state.tokenize.pop();stream.skipToEnd();return"comment";}
return{startState:function(){return{tokenize:[tokenBase],indented:0,context:{type:"top",indented:-config.indentUnit},continuedLine:false,lastTok:null,varList:false};},token:function(stream,state){if(stream.sol())state.indented=stream.indentation();var style=state.tokenize[state.tokenize.length-1](stream,state),kwtype;if(style=="ident"){var word=stream.current();style=keywords.propertyIsEnumerable(stream.current())?"keyword":/^[A-Z]/.test(word)?"tag":(state.lastTok=="def"||state.lastTok=="class"||state.varList)?"def":"variable";if(indentWords.propertyIsEnumerable(word))kwtype="indent";else if(dedentWords.propertyIsEnumerable(word))kwtype="dedent";else if((word=="if"||word=="unless")&&stream.column()==stream.indentation())
kwtype="indent";}
if(curPunc||(style&&style!="comment"))state.lastTok=word||curPunc||style;if(curPunc=="|")state.varList=!state.varList;if(kwtype=="indent"||/[\(\[\{]/.test(curPunc))
state.context={prev:state.context,type:curPunc||style,indented:state.indented};else if((kwtype=="dedent"||/[\)\]\}]/.test(curPunc))&&state.context.prev)
state.context=state.context.prev;if(stream.eol())
state.continuedLine=(curPunc=="\\"||style=="operator");return style;},indent:function(state,textAfter){if(state.tokenize[state.tokenize.length-1]!=tokenBase)return 0;var firstChar=textAfter&&textAfter.charAt(0);var ct=state.context;var closing=ct.type==matching[firstChar]||ct.type=="keyword"&&/^(?:end|until|else|elsif|when|rescue)\b/.test(textAfter);return ct.indented+(closing?0:config.indentUnit)+
(state.continuedLine?config.indentUnit:0);},electricChars:"}de"};});CodeMirror.defineMIME("text/x-ruby","ruby");;CodeMirror.defineMode("python",function(conf,parserConf){var ERRORCLASS='error';function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b");}
var singleOperators=parserConf.singleOperators||new RegExp("^[\\+\\-\\*/%&|\\^~<>!]");var singleDelimiters=parserConf.singleDelimiters||new RegExp('^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]');var doubleOperators=parserConf.doubleOperators||new RegExp("^((==)|(!=)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\*\\*))");var doubleDelimiters=parserConf.doubleDelimiters||new RegExp("^((\\+=)|(\\-=)|(\\*=)|(%=)|(/=)|(&=)|(\\|=)|(\\^=))");var tripleDelimiters=parserConf.tripleDelimiters||new RegExp("^((//=)|(>>=)|(<<=)|(\\*\\*=))");var identifiers=parserConf.identifiers||new RegExp("^[_A-Za-z][_A-Za-z0-9]*");var wordOperators=wordRegexp(['and','or','not','is','in']);var commonkeywords=['as','assert','break','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','lambda','pass','raise','return','try','while','with','yield'];var commonBuiltins=['abs','all','any','bin','bool','bytearray','callable','chr','classmethod','compile','complex','delattr','dict','dir','divmod','enumerate','eval','filter','float','format','frozenset','getattr','globals','hasattr','hash','help','hex','id','input','int','isinstance','issubclass','iter','len','list','locals','map','max','memoryview','min','next','object','oct','open','ord','pow','property','range','repr','reversed','round','set','setattr','slice','sorted','staticmethod','str','sum','super','tuple','type','vars','zip','__import__','NotImplemented','Ellipsis','__debug__'];var py2={'builtins':['apply','basestring','buffer','cmp','coerce','execfile','file','intern','long','raw_input','reduce','reload','unichr','unicode','xrange','False','True','None'],'keywords':['exec','print']};var py3={'builtins':['ascii','bytes','exec','print'],'keywords':['nonlocal','False','True','None']};if(!!parserConf.version&&parseInt(parserConf.version,10)===3){commonkeywords=commonkeywords.concat(py3.keywords);commonBuiltins=commonBuiltins.concat(py3.builtins);var stringPrefixes=new RegExp("^(([rb]|(br))?('{3}|\"{3}|['\"]))","i");}else{commonkeywords=commonkeywords.concat(py2.keywords);commonBuiltins=commonBuiltins.concat(py2.builtins);var stringPrefixes=new RegExp("^(([rub]|(ur)|(br))?('{3}|\"{3}|['\"]))","i");}
var keywords=wordRegexp(commonkeywords);var builtins=wordRegexp(commonBuiltins);var indentInfo=null;function tokenBase(stream,state){if(stream.sol()){var scopeOffset=state.scopes[0].offset;if(stream.eatSpace()){var lineOffset=stream.indentation();if(lineOffset>scopeOffset){indentInfo='indent';}else if(lineOffset<scopeOffset){indentInfo='dedent';}
return null;}else{if(scopeOffset>0){dedent(stream,state);}}}
if(stream.eatSpace()){return null;}
var ch=stream.peek();if(ch==='#'){stream.skipToEnd();return'comment';}
if(stream.match(/^[0-9\.]/,false)){var floatLiteral=false;if(stream.match(/^\d*\.\d+(e[\+\-]?\d+)?/i)){floatLiteral=true;}
if(stream.match(/^\d+\.\d*/)){floatLiteral=true;}
if(stream.match(/^\.\d+/)){floatLiteral=true;}
if(floatLiteral){stream.eat(/J/i);return'number';}
var intLiteral=false;if(stream.match(/^0x[0-9a-f]+/i)){intLiteral=true;}
if(stream.match(/^0b[01]+/i)){intLiteral=true;}
if(stream.match(/^0o[0-7]+/i)){intLiteral=true;}
if(stream.match(/^[1-9]\d*(e[\+\-]?\d+)?/)){stream.eat(/J/i);intLiteral=true;}
if(stream.match(/^0(?![\dx])/i)){intLiteral=true;}
if(intLiteral){stream.eat(/L/i);return'number';}}
if(stream.match(stringPrefixes)){state.tokenize=tokenStringFactory(stream.current());return state.tokenize(stream,state);}
if(stream.match(tripleDelimiters)||stream.match(doubleDelimiters)){return null;}
if(stream.match(doubleOperators)||stream.match(singleOperators)||stream.match(wordOperators)){return'operator';}
if(stream.match(singleDelimiters)){return null;}
if(stream.match(keywords)){return'keyword';}
if(stream.match(builtins)){return'builtin';}
if(stream.match(identifiers)){return'variable';}
stream.next();return ERRORCLASS;}
function tokenStringFactory(delimiter){while('rub'.indexOf(delimiter.charAt(0).toLowerCase())>=0){delimiter=delimiter.substr(1);}
var singleline=delimiter.length==1;var OUTCLASS='string';function tokenString(stream,state){while(!stream.eol()){stream.eatWhile(/[^'"\\]/);if(stream.eat('\\')){stream.next();if(singleline&&stream.eol()){return OUTCLASS;}}else if(stream.match(delimiter)){state.tokenize=tokenBase;return OUTCLASS;}else{stream.eat(/['"]/);}}
if(singleline){if(parserConf.singleLineStringErrors){return ERRORCLASS;}else{state.tokenize=tokenBase;}}
return OUTCLASS;}
tokenString.isString=true;return tokenString;}
function indent(stream,state,type){type=type||'py';var indentUnit=0;if(type==='py'){if(state.scopes[0].type!=='py'){state.scopes[0].offset=stream.indentation();return;}
for(var i=0;i<state.scopes.length;++i){if(state.scopes[i].type==='py'){indentUnit=state.scopes[i].offset+conf.indentUnit;break;}}}else{indentUnit=stream.column()+stream.current().length;}
state.scopes.unshift({offset:indentUnit,type:type});}
function dedent(stream,state,type){type=type||'py';if(state.scopes.length==1)return;if(state.scopes[0].type==='py'){var _indent=stream.indentation();var _indent_index=-1;for(var i=0;i<state.scopes.length;++i){if(_indent===state.scopes[i].offset){_indent_index=i;break;}}
if(_indent_index===-1){return true;}
while(state.scopes[0].offset!==_indent){state.scopes.shift();}
return false;}else{if(type==='py'){state.scopes[0].offset=stream.indentation();return false;}else{if(state.scopes[0].type!=type){return true;}
state.scopes.shift();return false;}}}
function tokenLexer(stream,state){indentInfo=null;var style=state.tokenize(stream,state);var current=stream.current();if(current==='.'){style=stream.match(identifiers,false)?null:ERRORCLASS;if(style===null&&state.lastToken==='meta'){style='meta';}
return style;}
if(current==='@'){return stream.match(identifiers,false)?'meta':ERRORCLASS;}
if((style==='variable'||style==='builtin')&&state.lastToken==='meta'){style='meta';}
if(current==='pass'||current==='return'){state.dedent+=1;}
if(current==='lambda')state.lambda=true;if((current===':'&&!state.lambda&&state.scopes[0].type=='py')||indentInfo==='indent'){indent(stream,state);}
var delimiter_index='[({'.indexOf(current);if(delimiter_index!==-1){indent(stream,state,'])}'.slice(delimiter_index,delimiter_index+1));}
if(indentInfo==='dedent'){if(dedent(stream,state)){return ERRORCLASS;}}
delimiter_index='])}'.indexOf(current);if(delimiter_index!==-1){if(dedent(stream,state,current)){return ERRORCLASS;}}
if(state.dedent>0&&stream.eol()&&state.scopes[0].type=='py'){if(state.scopes.length>1)state.scopes.shift();state.dedent-=1;}
return style;}
var external={startState:function(basecolumn){return{tokenize:tokenBase,scopes:[{offset:basecolumn||0,type:'py'}],lastToken:null,lambda:false,dedent:0};},token:function(stream,state){var style=tokenLexer(stream,state);state.lastToken=style;if(stream.eol()&&stream.lambda){state.lambda=false;}
return style;},indent:function(state){if(state.tokenize!=tokenBase){return state.tokenize.isString?CodeMirror.Pass:0;}
return state.scopes[0].offset;}};return external;});CodeMirror.defineMIME("text/x-python","python");;CodeMirror.defineMode("perl",function(){var PERL={'->':4,'++':4,'--':4,'**':4,'=~':4,'!~':4,'*':4,'/':4,'%':4,'x':4,'+':4,'-':4,'.':4,'<<':4,'>>':4,'<':4,'>':4,'<=':4,'>=':4,'lt':4,'gt':4,'le':4,'ge':4,'==':4,'!=':4,'<=>':4,'eq':4,'ne':4,'cmp':4,'~~':4,'&':4,'|':4,'^':4,'&&':4,'||':4,'//':4,'..':4,'...':4,'?':4,':':4,'=':4,'+=':4,'-=':4,'*=':4,',':4,'=>':4,'::':4,'not':4,'and':4,'or':4,'xor':4,'BEGIN':[5,1],'END':[5,1],'PRINT':[5,1],'PRINTF':[5,1],'GETC':[5,1],'READ':[5,1],'READLINE':[5,1],'DESTROY':[5,1],'TIE':[5,1],'TIEHANDLE':[5,1],'UNTIE':[5,1],'STDIN':5,'STDIN_TOP':5,'STDOUT':5,'STDOUT_TOP':5,'STDERR':5,'STDERR_TOP':5,'$ARG':5,'$_':5,'@ARG':5,'@_':5,'$LIST_SEPARATOR':5,'$"':5,'$PROCESS_ID':5,'$PID':5,'$$':5,'$REAL_GROUP_ID':5,'$GID':5,'$(':5,'$EFFECTIVE_GROUP_ID':5,'$EGID':5,'$)':5,'$PROGRAM_NAME':5,'$0':5,'$SUBSCRIPT_SEPARATOR':5,'$SUBSEP':5,'$;':5,'$REAL_USER_ID':5,'$UID':5,'$<':5,'$EFFECTIVE_USER_ID':5,'$EUID':5,'$>':5,'$a':5,'$b':5,'$COMPILING':5,'$^C':5,'$DEBUGGING':5,'$^D':5,'${^ENCODING}':5,'$ENV':5,'%ENV':5,'$SYSTEM_FD_MAX':5,'$^F':5,'@F':5,'${^GLOBAL_PHASE}':5,'$^H':5,'%^H':5,'@INC':5,'%INC':5,'$INPLACE_EDIT':5,'$^I':5,'$^M':5,'$OSNAME':5,'$^O':5,'${^OPEN}':5,'$PERLDB':5,'$^P':5,'$SIG':5,'%SIG':5,'$BASETIME':5,'$^T':5,'${^TAINT}':5,'${^UNICODE}':5,'${^UTF8CACHE}':5,'${^UTF8LOCALE}':5,'$PERL_VERSION':5,'$^V':5,'${^WIN32_SLOPPY_STAT}':5,'$EXECUTABLE_NAME':5,'$^X':5,'$1':5,'$MATCH':5,'$&':5,'${^MATCH}':5,'$PREMATCH':5,'$`':5,'${^PREMATCH}':5,'$POSTMATCH':5,"$'":5,'${^POSTMATCH}':5,'$LAST_PAREN_MATCH':5,'$+':5,'$LAST_SUBMATCH_RESULT':5,'$^N':5,'@LAST_MATCH_END':5,'@+':5,'%LAST_PAREN_MATCH':5,'%+':5,'@LAST_MATCH_START':5,'@-':5,'%LAST_MATCH_START':5,'%-':5,'$LAST_REGEXP_CODE_RESULT':5,'$^R':5,'${^RE_DEBUG_FLAGS}':5,'${^RE_TRIE_MAXBUF}':5,'$ARGV':5,'@ARGV':5,'ARGV':5,'ARGVOUT':5,'$OUTPUT_FIELD_SEPARATOR':5,'$OFS':5,'$,':5,'$INPUT_LINE_NUMBER':5,'$NR':5,'$.':5,'$INPUT_RECORD_SEPARATOR':5,'$RS':5,'$/':5,'$OUTPUT_RECORD_SEPARATOR':5,'$ORS':5,'$\\':5,'$OUTPUT_AUTOFLUSH':5,'$|':5,'$ACCUMULATOR':5,'$^A':5,'$FORMAT_FORMFEED':5,'$^L':5,'$FORMAT_PAGE_NUMBER':5,'$%':5,'$FORMAT_LINES_LEFT':5,'$-':5,'$FORMAT_LINE_BREAK_CHARACTERS':5,'$:':5,'$FORMAT_LINES_PER_PAGE':5,'$=':5,'$FORMAT_TOP_NAME':5,'$^':5,'$FORMAT_NAME':5,'$~':5,'${^CHILD_ERROR_NATIVE}':5,'$EXTENDED_OS_ERROR':5,'$^E':5,'$EXCEPTIONS_BEING_CAUGHT':5,'$^S':5,'$WARNING':5,'$^W':5,'${^WARNING_BITS}':5,'$OS_ERROR':5,'$ERRNO':5,'$!':5,'%OS_ERROR':5,'%ERRNO':5,'%!':5,'$CHILD_ERROR':5,'$?':5,'$EVAL_ERROR':5,'$@':5,'$OFMT':5,'$#':5,'$*':5,'$ARRAY_BASE':5,'$[':5,'$OLD_PERL_VERSION':5,'$]':5,'if':[1,1],elsif:[1,1],'else':[1,1],'while':[1,1],unless:[1,1],'for':[1,1],foreach:[1,1],'abs':1,accept:1,alarm:1,'atan2':1,bind:1,binmode:1,bless:1,bootstrap:1,'break':1,caller:1,chdir:1,chmod:1,chomp:1,chop:1,chown:1,chr:1,chroot:1,close:1,closedir:1,connect:1,'continue':[1,1],'cos':1,crypt:1,dbmclose:1,dbmopen:1,'default':1,defined:1,'delete':1,die:1,'do':1,dump:1,each:1,endgrent:1,endhostent:1,endnetent:1,endprotoent:1,endpwent:1,endservent:1,eof:1,'eval':1,'exec':1,exists:1,exit:1,'exp':1,fcntl:1,fileno:1,flock:1,fork:1,format:1,formline:1,getc:1,getgrent:1,getgrgid:1,getgrnam:1,gethostbyaddr:1,gethostbyname:1,gethostent:1,getlogin:1,getnetbyaddr:1,getnetbyname:1,getnetent:1,getpeername:1,getpgrp:1,getppid:1,getpriority:1,getprotobyname:1,getprotobynumber:1,getprotoent:1,getpwent:1,getpwnam:1,getpwuid:1,getservbyname:1,getservbyport:1,getservent:1,getsockname:1,getsockopt:1,given:1,glob:1,gmtime:1,'goto':1,grep:1,hex:1,'import':1,index:1,'int':1,ioctl:1,'join':1,keys:1,kill:1,last:1,lc:1,lcfirst:1,length:1,'link':1,listen:1,local:2,localtime:1,lock:1,'log':1,lstat:1,m:null,map:1,mkdir:1,msgctl:1,msgget:1,msgrcv:1,msgsnd:1,my:2,'new':1,next:1,no:1,oct:1,open:1,opendir:1,ord:1,our:2,pack:1,'package':1,pipe:1,pop:1,pos:1,print:1,printf:1,prototype:1,push:1,q:null,qq:null,qr:null,quotemeta:null,qw:null,qx:null,rand:1,read:1,readdir:1,readline:1,readlink:1,readpipe:1,recv:1,redo:1,ref:1,rename:1,require:1,reset:1,'return':1,reverse:1,rewinddir:1,rindex:1,rmdir:1,s:null,say:1,scalar:1,seek:1,seekdir:1,select:1,semctl:1,semget:1,semop:1,send:1,setgrent:1,sethostent:1,setnetent:1,setpgrp:1,setpriority:1,setprotoent:1,setpwent:1,setservent:1,setsockopt:1,shift:1,shmctl:1,shmget:1,shmread:1,shmwrite:1,shutdown:1,'sin':1,sleep:1,socket:1,socketpair:1,'sort':1,splice:1,'split':1,sprintf:1,'sqrt':1,srand:1,stat:1,state:1,study:1,'sub':1,'substr':1,symlink:1,syscall:1,sysopen:1,sysread:1,sysseek:1,system:1,syswrite:1,tell:1,telldir:1,tie:1,tied:1,time:1,times:1,tr:null,truncate:1,uc:1,ucfirst:1,umask:1,undef:1,unlink:1,unpack:1,unshift:1,untie:1,use:1,utime:1,values:1,vec:1,wait:1,waitpid:1,wantarray:1,warn:1,when:1,write:1,y:null};var RXstyle="string-2";var RXmodifiers=/[goseximacplud]/;function tokenChain(stream,state,chain,style,tail){state.chain=null;state.style=null;state.tail=null;state.tokenize=function(stream,state){var e=false,c,i=0;while(c=stream.next()){if(c===chain[i]&&!e){if(chain[++i]!==undefined){state.chain=chain[i];state.style=style;state.tail=tail;}
else if(tail)
stream.eatWhile(tail);state.tokenize=tokenPerl;return style;}
e=!e&&c=="\\";}
return style;};return state.tokenize(stream,state);}
function tokenSOMETHING(stream,state,string){state.tokenize=function(stream,state){if(stream.string==string)
state.tokenize=tokenPerl;stream.skipToEnd();return"string";};return state.tokenize(stream,state);}
function tokenPerl(stream,state){if(stream.eatSpace())
return null;if(state.chain)
return tokenChain(stream,state,state.chain,state.style,state.tail);if(stream.match(/^\-?[\d\.]/,false))
if(stream.match(/^(\-?(\d*\.\d+(e[+-]?\d+)?|\d+\.\d*)|0x[\da-fA-F]+|0b[01]+|\d+(e[+-]?\d+)?)/))
return'number';if(stream.match(/^<<(?=\w)/)){stream.eatWhile(/\w/);return tokenSOMETHING(stream,state,stream.current().substr(2));}
if(stream.sol()&&stream.match(/^\=item(?!\w)/)){return tokenSOMETHING(stream,state,'=cut');}
var ch=stream.next();if(ch=='"'||ch=="'"){if(stream.prefix(3)=="<<"+ch){var p=stream.pos;stream.eatWhile(/\w/);var n=stream.current().substr(1);if(n&&stream.eat(ch))
return tokenSOMETHING(stream,state,n);stream.pos=p;}
return tokenChain(stream,state,[ch],"string");}
if(ch=="q"){var c=stream.look(-2);if(!(c&&/\w/.test(c))){c=stream.look(0);if(c=="x"){c=stream.look(1);if(c=="("){stream.eatSuffix(2);return tokenChain(stream,state,[")"],RXstyle,RXmodifiers);}
if(c=="["){stream.eatSuffix(2);return tokenChain(stream,state,["]"],RXstyle,RXmodifiers);}
if(c=="{"){stream.eatSuffix(2);return tokenChain(stream,state,["}"],RXstyle,RXmodifiers);}
if(c=="<"){stream.eatSuffix(2);return tokenChain(stream,state,[">"],RXstyle,RXmodifiers);}
if(/[\^'"!~\/]/.test(c)){stream.eatSuffix(1);return tokenChain(stream,state,[stream.eat(c)],RXstyle,RXmodifiers);}}
else if(c=="q"){c=stream.look(1);if(c=="("){stream.eatSuffix(2);return tokenChain(stream,state,[")"],"string");}
if(c=="["){stream.eatSuffix(2);return tokenChain(stream,state,["]"],"string");}
if(c=="{"){stream.eatSuffix(2);return tokenChain(stream,state,["}"],"string");}
if(c=="<"){stream.eatSuffix(2);return tokenChain(stream,state,[">"],"string");}
if(/[\^'"!~\/]/.test(c)){stream.eatSuffix(1);return tokenChain(stream,state,[stream.eat(c)],"string");}}
else if(c=="w"){c=stream.look(1);if(c=="("){stream.eatSuffix(2);return tokenChain(stream,state,[")"],"bracket");}
if(c=="["){stream.eatSuffix(2);return tokenChain(stream,state,["]"],"bracket");}
if(c=="{"){stream.eatSuffix(2);return tokenChain(stream,state,["}"],"bracket");}
if(c=="<"){stream.eatSuffix(2);return tokenChain(stream,state,[">"],"bracket");}
if(/[\^'"!~\/]/.test(c)){stream.eatSuffix(1);return tokenChain(stream,state,[stream.eat(c)],"bracket");}}
else if(c=="r"){c=stream.look(1);if(c=="("){stream.eatSuffix(2);return tokenChain(stream,state,[")"],RXstyle,RXmodifiers);}
if(c=="["){stream.eatSuffix(2);return tokenChain(stream,state,["]"],RXstyle,RXmodifiers);}
if(c=="{"){stream.eatSuffix(2);return tokenChain(stream,state,["}"],RXstyle,RXmodifiers);}
if(c=="<"){stream.eatSuffix(2);return tokenChain(stream,state,[">"],RXstyle,RXmodifiers);}
if(/[\^'"!~\/]/.test(c)){stream.eatSuffix(1);return tokenChain(stream,state,[stream.eat(c)],RXstyle,RXmodifiers);}}
else if(/[\^'"!~\/(\[{<]/.test(c)){if(c=="("){stream.eatSuffix(1);return tokenChain(stream,state,[")"],"string");}
if(c=="["){stream.eatSuffix(1);return tokenChain(stream,state,["]"],"string");}
if(c=="{"){stream.eatSuffix(1);return tokenChain(stream,state,["}"],"string");}
if(c=="<"){stream.eatSuffix(1);return tokenChain(stream,state,[">"],"string");}
if(/[\^'"!~\/]/.test(c)){return tokenChain(stream,state,[stream.eat(c)],"string");}}}}
if(ch=="m"){var c=stream.look(-2);if(!(c&&/\w/.test(c))){c=stream.eat(/[(\[{<\^'"!~\/]/);if(c){if(/[\^'"!~\/]/.test(c)){return tokenChain(stream,state,[c],RXstyle,RXmodifiers);}
if(c=="("){return tokenChain(stream,state,[")"],RXstyle,RXmodifiers);}
if(c=="["){return tokenChain(stream,state,["]"],RXstyle,RXmodifiers);}
if(c=="{"){return tokenChain(stream,state,["}"],RXstyle,RXmodifiers);}
if(c=="<"){return tokenChain(stream,state,[">"],RXstyle,RXmodifiers);}}}}
if(ch=="s"){var c=/[\/>\]})\w]/.test(stream.look(-2));if(!c){c=stream.eat(/[(\[{<\^'"!~\/]/);if(c){if(c=="[")
return tokenChain(stream,state,["]","]"],RXstyle,RXmodifiers);if(c=="{")
return tokenChain(stream,state,["}","}"],RXstyle,RXmodifiers);if(c=="<")
return tokenChain(stream,state,[">",">"],RXstyle,RXmodifiers);if(c=="(")
return tokenChain(stream,state,[")",")"],RXstyle,RXmodifiers);return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}
if(ch=="y"){var c=/[\/>\]})\w]/.test(stream.look(-2));if(!c){c=stream.eat(/[(\[{<\^'"!~\/]/);if(c){if(c=="[")
return tokenChain(stream,state,["]","]"],RXstyle,RXmodifiers);if(c=="{")
return tokenChain(stream,state,["}","}"],RXstyle,RXmodifiers);if(c=="<")
return tokenChain(stream,state,[">",">"],RXstyle,RXmodifiers);if(c=="(")
return tokenChain(stream,state,[")",")"],RXstyle,RXmodifiers);return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}
if(ch=="t"){var c=/[\/>\]})\w]/.test(stream.look(-2));if(!c){c=stream.eat("r");if(c){c=stream.eat(/[(\[{<\^'"!~\/]/);if(c){if(c=="[")
return tokenChain(stream,state,["]","]"],RXstyle,RXmodifiers);if(c=="{")
return tokenChain(stream,state,["}","}"],RXstyle,RXmodifiers);if(c=="<")
return tokenChain(stream,state,[">",">"],RXstyle,RXmodifiers);if(c=="(")
return tokenChain(stream,state,[")",")"],RXstyle,RXmodifiers);return tokenChain(stream,state,[c,c],RXstyle,RXmodifiers);}}}}
if(ch=="`"){return tokenChain(stream,state,[ch],"variable-2");}
if(ch=="/"){if(!/~\s*$/.test(stream.prefix()))
return"operator";else
return tokenChain(stream,state,[ch],RXstyle,RXmodifiers);}
if(ch=="$"){var p=stream.pos;if(stream.eatWhile(/\d/)||stream.eat("{")&&stream.eatWhile(/\d/)&&stream.eat("}"))
return"variable-2";else
stream.pos=p;}
if(/[$@%]/.test(ch)){var p=stream.pos;if(stream.eat("^")&&stream.eat(/[A-Z]/)||!/[@$%&]/.test(stream.look(-2))&&stream.eat(/[=|\\\-#?@;:&`~\^!\[\]*'"$+.,\/<>()]/)){var c=stream.current();if(PERL[c])
return"variable-2";}
stream.pos=p;}
if(/[$@%&]/.test(ch)){if(stream.eatWhile(/[\w$\[\]]/)||stream.eat("{")&&stream.eatWhile(/[\w$\[\]]/)&&stream.eat("}")){var c=stream.current();if(PERL[c])
return"variable-2";else
return"variable";}}
if(ch=="#"){if(stream.look(-2)!="$"){stream.skipToEnd();return"comment";}}
if(/[:+\-\^*$&%@=<>!?|\/~\.]/.test(ch)){var p=stream.pos;stream.eatWhile(/[:+\-\^*$&%@=<>!?|\/~\.]/);if(PERL[stream.current()])
return"operator";else
stream.pos=p;}
if(ch=="_"){if(stream.pos==1){if(stream.suffix(6)=="_END__"){return tokenChain(stream,state,['\0'],"comment");}
else if(stream.suffix(7)=="_DATA__"){return tokenChain(stream,state,['\0'],"variable-2");}
else if(stream.suffix(7)=="_C__"){return tokenChain(stream,state,['\0'],"string");}}}
if(/\w/.test(ch)){var p=stream.pos;if(stream.look(-2)=="{"&&(stream.look(0)=="}"||stream.eatWhile(/\w/)&&stream.look(0)=="}"))
return"string";else
stream.pos=p;}
if(/[A-Z]/.test(ch)){var l=stream.look(-2);var p=stream.pos;stream.eatWhile(/[A-Z_]/);if(/[\da-z]/.test(stream.look(0))){stream.pos=p;}
else{var c=PERL[stream.current()];if(!c)
return"meta";if(c[1])
c=c[0];if(l!=":"){if(c==1)
return"keyword";else if(c==2)
return"def";else if(c==3)
return"atom";else if(c==4)
return"operator";else if(c==5)
return"variable-2";else
return"meta";}
else
return"meta";}}
if(/[a-zA-Z_]/.test(ch)){var l=stream.look(-2);stream.eatWhile(/\w/);var c=PERL[stream.current()];if(!c)
return"meta";if(c[1])
c=c[0];if(l!=":"){if(c==1)
return"keyword";else if(c==2)
return"def";else if(c==3)
return"atom";else if(c==4)
return"operator";else if(c==5)
return"variable-2";else
return"meta";}
else
return"meta";}
return null;}
return{startState:function(){return{tokenize:tokenPerl,chain:null,style:null,tail:null};},token:function(stream,state){return(state.tokenize||tokenPerl)(stream,state);},electricChars:"{}"};});CodeMirror.defineMIME("text/x-perl","perl");CodeMirror.StringStream.prototype.look=function(c){return this.string.charAt(this.pos+(c||0));};CodeMirror.StringStream.prototype.prefix=function(c){if(c){var x=this.pos-c;return this.string.substr((x>=0?x:0),c);}
else{return this.string.substr(0,this.pos-1);}};CodeMirror.StringStream.prototype.suffix=function(c){var y=this.string.length;var x=y-this.pos+1;return this.string.substr(this.pos,(c&&c<y?c:x));};CodeMirror.StringStream.prototype.nsuffix=function(c){var p=this.pos;var l=c||(this.string.length-this.pos+1);this.pos+=l;return this.string.substr(p,l);};CodeMirror.StringStream.prototype.eatSuffix=function(c){var x=this.pos+c;var y;if(x<=0)
this.pos=0;else if(x>=(y=this.string.length-1))
this.pos=y;else
this.pos=x;};